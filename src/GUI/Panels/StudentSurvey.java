/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Panels;

import GUI.Student;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import pl_project.course;
import pl_project.instructor;

/**
 *
 * @author LENOVO
 */
public class StudentSurvey extends javax.swing.JPanel {

    int id;
    public StudentSurvey(int id) {
        initComponents();
        this.id = id;
        printCourses();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        l = new javax.swing.JLabel();

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Parent Course Name", "Course Price", "Course Start Date", "Course End Date", "Course Room", "Instructor ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        jButton2.setText("Display Course");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Enter Course ID");

        jButton1.setText("Display All Courses");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Register Course");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(387, 387, 387)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(l, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jTextField1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int courseID = Integer.parseInt(jTextField1.getText());
        printCourse(courseID);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        printCourses();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int courseId = Integer.parseInt(jTextField1.getText());
        registerCourse(courseId, id);
    }//GEN-LAST:event_jButton3ActionPerformed
       public void registerCourse(int courseid, int id) {
        int count = 1;
        try {
            String url = "jdbc:sqlserver://localhost:1433;databaseName=pl_project";
            String user = "admin";
            String pass = "admin";
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement stmt = con.createStatement();
            String sql = "select * from std_reg_cou where student_id = "+ id;
            ResultSet s = stmt.executeQuery(sql);
            while(s.next()) {
                count++;
            }
            if (count >= 0 && count <= 7) {
                String sql1 = "select * from std_reg_cou where course_id = " + courseid + " and student_id = " + id;
                ResultSet result = stmt.executeQuery(sql1);
                if (result.next()) {
                    jLabel1.setText("Course Already Registered");
                } else {
                    String sql2 = "insert into std_reg_cou(student_id,course_id) values(" + id + ", " + courseid + ")";
                    stmt.executeUpdate(sql2);
                    jLabel1.setText("Course Registered Successfully");
                }
            }
            else {
                jLabel1.setText("You Cannot Register More Than 7 Courses");
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
       
    public void printCourse (int courseid) {
        int count = 0;
        try {
            String url = "jdbc:sqlserver://localhost:1433;databaseName=pl_project";
            String user = "admin";
            String pass = "admin";
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement stmt = con.createStatement();
            String sql = "select * from course where cuo_id =" + courseid;
            ResultSet s = stmt.executeQuery(sql);
            DefaultTableModel model1 = (DefaultTableModel) Table.getModel();
            Object[] data = new Object[9];
            model1.setRowCount(0);
            if(s.next()) {
                data[0] = s.getInt("cuo_id");
                data[1] = s.getString("cou_name");
                data[2] = s.getString("parent_course_name");
                data[3] = s.getInt("course_price");
                data[4] = s.getString("start_course_date");
                data[5] = s.getString("end_course_date");
                data[6] = s.getInt("room");
                data[7] = s.getInt("instructor_id");
                model1.addRow(data);
                l.setText("found");
            }
        } catch (SQLException e) {
            System.out.println(e);
            l.setText("not found");
        }
    }
    public void printCourses () {
        int count = 0;
        DefaultTableModel model1 = (DefaultTableModel) Table.getModel();
        
        try {
            String url = "jdbc:sqlserver://localhost:1433;databaseName=pl_project";
            String user = "admin";
            String pass = "admin";
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement stmt = con.createStatement();
            
            String sql = "select * from course";
            ResultSet s = stmt.executeQuery(sql);
            
            Object[] data = new Object[9];
            model1.setRowCount(0);
            while (s.next()) {
                data[0] = s.getInt("cuo_id");
                data[1] = s.getString("cou_name");
                data[2] = s.getString("parent_course_name");
                data[3] = s.getInt("course_price");
                data[4] = s.getString("start_course_date");
                data[5] = s.getString("end_course_date");
                data[6] = s.getInt("room");
                data[7] = s.getInt("instructor_id");
                model1.addRow(data);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel l;
    // End of variables declaration//GEN-END:variables
}
